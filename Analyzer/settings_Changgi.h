#include "common/DataStruct.h"
#include "common/treestream.h"

#include "Analysis_Changgi.h" // Specify here the implementations for you Analysis

struct settings {

  //-----------------------------------------------------------------------------
  // -- Constants
  //-----------------------------------------------------------------------------
  settings( bool RunOnSkim = true ) :
    runOnSkim                ( RunOnSkim ),
    saveSkimmedNtuple        ( false ),
    doPileupReweighting      ( true ),
    varySystematics          ( true ),
    systematicsFileName      ( "systematics/2016_05_26.txt" ),
    treeName                 ( RunOnSkim ? "B2GTree"   : "B2GTTreeMaker/B2GTree" ),
    totWeightHistoName       ( RunOnSkim ? "totweight" : "EventCounter/totweight" ), // saved in ntuple
    mcPileupHistoName        ( RunOnSkim ? "pileup_mc" : "EventCounter/pileup" ),    // saved in ntuple
    pileupDir                ( "pileup/Mar02_Silver_JSON/" ),
    intLumi                  ( 2684.07 /* brilcalc - Mar02 Silver v2 ReReco JSON */ ), // Tot int lumi in (pb^-1),
    lumiUncertainty          ( 0.027 ),
    triggerEffScaleFactor    ( 1.0 ),
    triggerEffUncertainty    ( 0.00 )
  {
    if (RunOnSkim) {
      totWeightHistoNamesSignal.push_back("totweight_T1tttt"); // T1tttt (use same histo for fast and fullsim)
      xsecHistoNamesSignal     .push_back("xsec_T1tttt");
    } else {
      totWeightHistoNamesSignal.push_back("EventCounter/h_totweight_T1tttt");
      xsecHistoNamesSignal     .push_back("EventCounter/h_xsec_T1tttt");
    }
  };
  ~settings(){};

  const bool runOnSkim;
  const bool saveSkimmedNtuple;
  const bool doPileupReweighting;
  const bool varySystematics;
  const std::string systematicsFileName;
  const std::string treeName;
  const std::string totWeightHistoName;
  const std::string mcPileupHistoName;
  const std::string pileupDir;
  const double intLumi;
  const double lumiUncertainty;
  const double triggerEffScaleFactor;
  const double triggerEffUncertainty;
  std::vector<std::string> totWeightHistoNamesSignal;
  std::vector<std::string> xsecHistoNamesSignal;

  //-----------------------------------------------------------------------------
  // -- Declare variables to be read by treestream
  //-----------------------------------------------------------------------------
  // --- Structs can be filled by calling fillObjects()
  // --- after the call to stream.read(...)
  //-----------------------------------------------------------------------------
  // -- Select variables to be read
  //-----------------------------------------------------------------------------

  void selectVariables(itreestream& stream, DataStruct& data) {
    //stream.select("evt_npv", data.evt.npv);
    //stream.select("evt_vx", data.evt.vx);
    //stream.select("evt_vy", data.evt.vy);
    //stream.select("evt_vz", data.evt.vz);
    stream.select("evt_RunNumber", data.evt.RunNumber);
    stream.select("evt_LumiBlock", data.evt.LumiBlock);
    stream.select("evt_EventNumber", data.evt.EventNumber);
    //stream.select("evt_rho", data.evt.rho);
    stream.select("evt_NGoodVtx", data.evt.NGoodVtx);
    //stream.select("evt_NLep", data.evt.NLep);
    //stream.select("evt_NTopHad", data.evt.NTopHad);
    //stream.select("evt_NTopHadPreTag", data.evt.NTopHadPreTag);
    //stream.select("evt_NTopLep", data.evt.NTopLep);
    //stream.select("evt_NTop", data.evt.NTop);
    stream.select("evt_LHA_PDF_ID", data.evt.LHA_PDF_ID);
    //stream.select("evt_HtLep", data.evt.HtLep);
    //stream.select("evt_HtTop", data.evt.HtTop);
    stream.select("evt_Ht", data.evt.Ht);
    stream.select("evt_HtAll", data.evt.HtAll);
    //stream.select("evt_HtEx", data.evt.HtEx);
    //stream.select("evt_HtExFr", data.evt.HtExFr);
    //stream.select("evt_HtTopFr", data.evt.HtTopFr);
    //stream.select("evt_TTHadDR", data.evt.TTHadDR);
    //stream.select("evt_TTHadDPhi", data.evt.TTHadDPhi);
    //stream.select("evt_TTHadDEta", data.evt.TTHadDEta);
    //stream.select("evt_TTHadMass", data.evt.TTHadMass);
    //stream.select("evt_TTHadSumPt", data.evt.TTHadSumPt);
    //stream.select("evt_TTHadPz", data.evt.TTHadPz);
    //stream.select("evt_TTHadHz", data.evt.TTHadHz);
    //stream.select("evt_TTHadDPz", data.evt.TTHadDPz);
    //stream.select("evt_TTHadMR", data.evt.TTHadMR);
    //stream.select("evt_TTHadMTR", data.evt.TTHadMTR);
    //stream.select("evt_TTHadR", data.evt.TTHadR);
    //stream.select("evt_TTHadR2", data.evt.TTHadR2);
    stream.select("evt_MR", data.evt.MR);
    stream.select("evt_MTR", data.evt.MTR);
    stream.select("evt_R", data.evt.R);
    stream.select("evt_R2", data.evt.R2);
    stream.select("evt_AK8Puppi_MR", data.evt.AK8Puppi_MR);
    stream.select("evt_AK8Puppi_MTR", data.evt.AK8Puppi_MTR);
    stream.select("evt_AK8Puppi_R", data.evt.AK8Puppi_R);
    stream.select("evt_AK8Puppi_R2", data.evt.AK8Puppi_R2);
    stream.select("evt_AK4_MR", data.evt.AK4_MR);
    stream.select("evt_AK4_MTR", data.evt.AK4_MTR);
    stream.select("evt_AK4_R", data.evt.AK4_R);
    stream.select("evt_AK4_R2", data.evt.AK4_R2);
    stream.select("evt_XSec", data.evt.XSec);
    //stream.select("evt_NEvent_Corr", data.evt.NEvent_Corr);
    //stream.select("evt_Lumi_Weight", data.evt.Lumi_Weight);
    stream.select("evt_Gen_Weight", data.evt.Gen_Weight);
    stream.select("evt_Gen_Ht", data.evt.Gen_Ht);
    stream.select("SUSY_Gluino_Mass", data.evt.SUSY_Gluino_Mass);
    stream.select("SUSY_LSP_Mass", data.evt.SUSY_LSP_Mass);
    
    //stream.select("met_size", data.met.size);
    stream.select("met_Pt", data.met.Pt);
    stream.select("met_Px", data.met.Px);
    stream.select("met_Py", data.met.Py);
    stream.select("met_Phi", data.met.Phi);
    stream.select("met_uncorPt", data.met.uncorPt);
    stream.select("met_uncorPhi", data.met.uncorPhi);
    stream.select("met_uncorSumEt", data.met.uncorSumEt);
    
    stream.select("pu_NtrueInt", data.pu.NtrueInt);
    //stream.select("pu_size", data.pu.size);
    //stream.select("pu_BX", data.pu.BX);
    //stream.select("pu_NInt", data.pu.NInt);
    
    stream.select("vtx_size", data.vtx.size);
    stream.select("vtx_ndof", data.vtx.ndof);
    stream.select("vtx_z", data.vtx.z);
    stream.select("vtx_rho", data.vtx.rho);
    //stream.select("vtx_chi", data.vtx.chi);
    
    stream.select("scale_size", data.syst_scale.size);
    stream.select("scale_Weights", data.syst_scale.Weights);
    
    stream.select("pdf_size", data.syst_pdf.size);
    stream.select("pdf_Weights", data.syst_pdf.Weights);
    
    stream.select("alphas_size", data.syst_alphas.size);
    stream.select("alphas_Weights", data.syst_alphas.Weights);
    
    // Filters
    // https://twiki.cern.ch/twiki/bin/viewauth/CMS/MissingETOptionalFiltersRun2#Analysis_Recommendations_for_any
    
    //stream.select("Flag_HBHEIsoNoiseFilterResult", data.filter.HBHEIsoNoiseFilterResult);
    //stream.select("Flag_HBHENoiseFilterResult", data.filter.HBHENoiseFilterResult);
    //stream.select("Flag_HBHENoiseFilterResultRun1", data.filter.HBHENoiseFilterResultRun1);
    //stream.select("Flag_HBHENoiseFilterResultRun2Loose", data.filter.HBHENoiseFilterResultRun2Loose);
    //stream.select("Flag_HBHENoiseFilterResultRun2Tight", data.filter.HBHENoiseFilterResultRun2Tight);
    stream.select("Flag_goodVertices", data.filter.goodVertices); // 76X - use
    stream.select("Flag_eeBadScFilter", data.filter.eeBadScFilter); // 76X - use
    //stream.select("Flag_ecalLaserCorrFilter", data.filter.ecalLaserCorrFilter);
    stream.select("Flag_EcalDeadCellTriggerPrimitiveFilter", data.filter.EcalDeadCellTriggerPrimitiveFilter); // 76X - use
    //stream.select("Flag_EcalDeadCellBoundaryEnergyFilter", data.filter.EcalDeadCellBoundaryEnergyFilter);
    //stream.select("Flag_HcalStripHaloFilter", data.filter.HcalStripHaloFilter);
    //stream.select("Flag_hcalLaserEventFilter", data.filter.hcalLaserEventFilter);
    stream.select("Flag_HBHENoiseFilter", data.filter.HBHENoiseFilter); // 76X - use
    stream.select("Flag_HBHENoiseIsoFilter", data.filter.HBHENoiseIsoFilter); // 76X - use
    //stream.select("Flag_CSCTightHaloFilter", data.filter.CSCTightHaloFilter);
    //stream.select("Flag_CSCTightHaloTrkMuUnvetoFilter", data.filter.CSCTightHaloTrkMuUnvetoFilter);
    stream.select("Flag_CSCTightHalo2015Filter", data.filter.CSCTightHalo2015Filter); // 76X - use
    stream.select("Flag_muonBadTrackFilter", data.filter.muonBadTrackFilter); // 76X - Do not use (under study)
    stream.select("Flag_chargedHadronTrackResolutionFilter", data.filter.chargedHadronTrackResolutionFilter); // 76X - Do not use (under study)
    //stream.select("Flag_trkPOGFilters", data.filter.trkPOGFilters);
    //stream.select("Flag_trkPOG_manystripclus53X", data.filter.trkPOG_manystripclus53X);
    //stream.select("Flag_trkPOG_toomanystripclus53X", data.filter.trkPOG_toomanystripclus53X);
    //stream.select("Flag_trkPOG_logErrorTooManyClusters", data.filter.trkPOG_logErrorTooManyClusters);
    //stream.select("Flag_METFilters", data.filter.METFilters);
    
    // Triggers
    // Check prescales: https://twiki.cern.ch/twiki/bin/view/CMS/TriggerStudies#HLT_frozen_menus
    
    //stream.select("HLT_AK8PFJet360_TrimMass30", data.hlt.AK8PFJet360_TrimMass30); // wrong branchname, disable for now
    //stream.select("HLT_AK8PFJet360_TrimMass30_prescale", data.hlt.AK8PFJet360_TrimMass30_prescale);
    //stream.select("HLT_PFJet40", data.hlt.PFJet40);
    //stream.select("HLT_PFJet40_prescale", data.hlt.PFJet40_prescale);
    //stream.select("HLT_PFJet60", data.hlt.PFJet60);
    //stream.select("HLT_PFJet60_prescale", data.hlt.PFJet60_prescale);
    //stream.select("HLT_PFJet80", data.hlt.PFJet80);
    //stream.select("HLT_PFJet80_prescale", data.hlt.PFJet80_prescale);
    //stream.select("HLT_PFJet140", data.hlt.PFJet140);
    //stream.select("HLT_PFJet140_prescale", data.hlt.PFJet140_prescale);
    //stream.select("HLT_PFJet200", data.hlt.PFJet200);
    //stream.select("HLT_PFJet200_prescale", data.hlt.PFJet200_prescale);
    //stream.select("HLT_PFJet260", data.hlt.PFJet260);
    //stream.select("HLT_PFJet260_prescale", data.hlt.PFJet260_prescale);
    stream.select("HLT_PFJet320", data.hlt.PFJet320);
    stream.select("HLT_PFJet320_prescale", data.hlt.PFJet320_prescale);
    stream.select("HLT_PFJet400", data.hlt.PFJet400);
    stream.select("HLT_PFJet400_prescale", data.hlt.PFJet400_prescale);
    stream.select("HLT_PFJet450", data.hlt.PFJet450); // unprescaled
    stream.select("HLT_PFJet450_prescale", data.hlt.PFJet450_prescale);
    stream.select("HLT_PFJet500", data.hlt.PFJet500);
    stream.select("HLT_PFJet500_prescale", data.hlt.PFJet500_prescale);
    //stream.select("HLT_DiPFJetAve40", data.hlt.DiPFJetAve40);
    //stream.select("HLT_DiPFJetAve40_prescale", data.hlt.DiPFJetAve40_prescale);
    //stream.select("HLT_DiPFJetAve60", data.hlt.DiPFJetAve60);
    //stream.select("HLT_DiPFJetAve60_prescale", data.hlt.DiPFJetAve60_prescale);
    //stream.select("HLT_DiPFJetAve80", data.hlt.DiPFJetAve80);
    //stream.select("HLT_DiPFJetAve80_prescale", data.hlt.DiPFJetAve80_prescale);
    //stream.select("HLT_DiPFJetAve140", data.hlt.DiPFJetAve140);
    //stream.select("HLT_DiPFJetAve140_prescale", data.hlt.DiPFJetAve140_prescale);
    stream.select("HLT_DiPFJetAve200", data.hlt.DiPFJetAve200);
    stream.select("HLT_DiPFJetAve200_prescale", data.hlt.DiPFJetAve200_prescale);
    stream.select("HLT_DiPFJetAve260", data.hlt.DiPFJetAve260);
    stream.select("HLT_DiPFJetAve260_prescale", data.hlt.DiPFJetAve260_prescale);
    stream.select("HLT_DiPFJetAve320", data.hlt.DiPFJetAve320);
    stream.select("HLT_DiPFJetAve320_prescale", data.hlt.DiPFJetAve320_prescale);
    stream.select("HLT_DiPFJetAve400", data.hlt.DiPFJetAve400);
    stream.select("HLT_DiPFJetAve400_prescale", data.hlt.DiPFJetAve400_prescale);
    stream.select("HLT_DiPFJetAve500", data.hlt.DiPFJetAve500);
    stream.select("HLT_DiPFJetAve500_prescale", data.hlt.DiPFJetAve500_prescale); // unprescaled
    //stream.select("HLT_DiPFJetAve60_HFJEC", data.hlt.DiPFJetAve60_HFJEC);
    //stream.select("HLT_DiPFJetAve60_HFJEC_prescale", data.hlt.DiPFJetAve60_HFJEC_prescale);
    //stream.select("HLT_DiPFJetAve80_HFJEC", data.hlt.DiPFJetAve80_HFJEC);
    //stream.select("HLT_DiPFJetAve80_HFJEC_prescale", data.hlt.DiPFJetAve80_HFJEC_prescale);
    //stream.select("HLT_DiPFJetAve100_HFJEC", data.hlt.DiPFJetAve100_HFJEC);
    //stream.select("HLT_DiPFJetAve100_HFJEC_prescale", data.hlt.DiPFJetAve100_HFJEC_prescale);
    stream.select("HLT_DiPFJetAve160_HFJEC", data.hlt.DiPFJetAve160_HFJEC);
    stream.select("HLT_DiPFJetAve160_HFJEC_prescale", data.hlt.DiPFJetAve160_HFJEC_prescale);
    stream.select("HLT_DiPFJetAve220_HFJEC", data.hlt.DiPFJetAve220_HFJEC);
    stream.select("HLT_DiPFJetAve220_HFJEC_prescale", data.hlt.DiPFJetAve220_HFJEC_prescale);
    stream.select("HLT_DiPFJetAve300_HFJEC", data.hlt.DiPFJetAve300_HFJEC);
    stream.select("HLT_DiPFJetAve300_HFJEC_prescale", data.hlt.DiPFJetAve300_HFJEC_prescale);
    stream.select("HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV0p45", data.hlt.AK8DiPFJet250_200_TrimMass30_BTagCSV0p45);
    stream.select("HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV0p45_prescale", data.hlt.AK8DiPFJet250_200_TrimMass30_BTagCSV0p45_prescale);
    stream.select("HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV0p45", data.hlt.AK8DiPFJet280_200_TrimMass30_BTagCSV0p45);
    stream.select("HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV0p45_prescale", data.hlt.AK8DiPFJet280_200_TrimMass30_BTagCSV0p45_prescale);
    stream.select("HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV0p45", data.hlt.AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV0p45);
    stream.select("HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV0p45_prescale", data.hlt.AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV0p45_prescale);
    stream.select("HLT_AK8PFHT650_TrimR0p1PT0p03Mass50", data.hlt.AK8PFHT650_TrimR0p1PT0p03Mass50);
    stream.select("HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_prescale", data.hlt.AK8PFHT650_TrimR0p1PT0p03Mass50_prescale);
    stream.select("HLT_AK8PFHT700_TrimR0p1PT0p03Mass50", data.hlt.AK8PFHT700_TrimR0p1PT0p03Mass50);
    stream.select("HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_prescale", data.hlt.AK8PFHT700_TrimR0p1PT0p03Mass50_prescale);
    stream.select("HLT_PFHT550_4JetPt50", data.hlt.PFHT550_4JetPt50);
    stream.select("HLT_PFHT550_4JetPt50_prescale", data.hlt.PFHT550_4JetPt50_prescale);
    stream.select("HLT_PFHT650_4JetPt50", data.hlt.PFHT650_4JetPt50);
    stream.select("HLT_PFHT650_4JetPt50_prescale", data.hlt.PFHT650_4JetPt50_prescale);
    stream.select("HLT_PFHT750_4JetPt50", data.hlt.PFHT750_4JetPt50);
    stream.select("HLT_PFHT750_4JetPt50_prescale", data.hlt.PFHT750_4JetPt50_prescale); // unprescaled
    //stream.select("HLT_ECALHT800", data.hlt.ECALHT800);
    //stream.select("HLT_ECALHT800_prescale", data.hlt.ECALHT800_prescale);
    //stream.select("HLT_PFHT200", data.hlt.PFHT200);
    //stream.select("HLT_PFHT200_prescale", data.hlt.PFHT200_prescale);
    //stream.select("HLT_PFHT250", data.hlt.PFHT250);
    //stream.select("HLT_PFHT250_prescale", data.hlt.PFHT250_prescale);
    //stream.select("HLT_PFHT300", data.hlt.PFHT300);
    //stream.select("HLT_PFHT300_prescale", data.hlt.PFHT300_prescale);
    //stream.select("HLT_PFHT350", data.hlt.PFHT350);
    //stream.select("HLT_PFHT350_prescale", data.hlt.PFHT350_prescale);
    stream.select("HLT_PFHT400", data.hlt.PFHT400);
    stream.select("HLT_PFHT400_prescale", data.hlt.PFHT400_prescale);
    stream.select("HLT_PFHT475", data.hlt.PFHT475);
    stream.select("HLT_PFHT475_prescale", data.hlt.PFHT475_prescale);
    stream.select("HLT_PFHT600", data.hlt.PFHT600);
    stream.select("HLT_PFHT600_prescale", data.hlt.PFHT600_prescale);
    stream.select("HLT_PFHT650", data.hlt.PFHT650);
    stream.select("HLT_PFHT650_prescale", data.hlt.PFHT650_prescale);
    stream.select("HLT_PFHT800", data.hlt.PFHT800);
    stream.select("HLT_PFHT800_prescale", data.hlt.PFHT800_prescale); // unprescaled
    stream.select("HLT_Rsq0p25", data.hlt.Rsq0p25);
    stream.select("HLT_Rsq0p25_prescale", data.hlt.Rsq0p25_prescale);
    stream.select("HLT_Rsq0p30", data.hlt.Rsq0p30);
    stream.select("HLT_Rsq0p30_prescale", data.hlt.Rsq0p30_prescale);
    stream.select("HLT_RsqMR240_Rsq0p09_MR200", data.hlt.RsqMR240_Rsq0p09_MR200);
    stream.select("HLT_RsqMR240_Rsq0p09_MR200_prescale", data.hlt.RsqMR240_Rsq0p09_MR200_prescale);
    stream.select("HLT_RsqMR240_Rsq0p09_MR200_4jet", data.hlt.RsqMR240_Rsq0p09_MR200_4jet);
    stream.select("HLT_RsqMR240_Rsq0p09_MR200_4jet_prescale", data.hlt.RsqMR240_Rsq0p09_MR200_4jet_prescale);
    stream.select("HLT_RsqMR270_Rsq0p09_MR200", data.hlt.RsqMR270_Rsq0p09_MR200);
    stream.select("HLT_RsqMR270_Rsq0p09_MR200_prescale", data.hlt.RsqMR270_Rsq0p09_MR200_prescale);
    stream.select("HLT_RsqMR270_Rsq0p09_MR200_4jet", data.hlt.RsqMR270_Rsq0p09_MR200_4jet);
    stream.select("HLT_RsqMR270_Rsq0p09_MR200_4jet_prescale", data.hlt.RsqMR270_Rsq0p09_MR200_4jet_prescale);
    stream.select("HLT_Mu30_eta2p1_PFJet150_PFJet50", data.hlt.Mu30_eta2p1_PFJet150_PFJet50);
    stream.select("HLT_Mu30_eta2p1_PFJet150_PFJet50_prescale", data.hlt.Mu30_eta2p1_PFJet150_PFJet50_prescale);
    stream.select("HLT_Mu40_eta2p1_PFJet200_PFJet50", data.hlt.Mu40_eta2p1_PFJet200_PFJet50);
    stream.select("HLT_Mu40_eta2p1_PFJet200_PFJet50_prescale", data.hlt.Mu40_eta2p1_PFJet200_PFJet50_prescale);
    stream.select("HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50", data.hlt.Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50);
    stream.select("HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_prescale", data.hlt.Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_prescale);
    stream.select("HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50", data.hlt.Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50);
    stream.select("HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_prescale", data.hlt.Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_prescale);
    //stream.select("HLT_Ele8_CaloIdM_TrackIdM_PFJet30", data.hlt.Ele8_CaloIdM_TrackIdM_PFJet30);
    //stream.select("HLT_Ele8_CaloIdM_TrackIdM_PFJet30_prescale", data.hlt.Ele8_CaloIdM_TrackIdM_PFJet30_prescale);
    //stream.select("HLT_Ele12_CaloIdM_TrackIdM_PFJet30", data.hlt.Ele12_CaloIdM_TrackIdM_PFJet30);
    //stream.select("HLT_Ele12_CaloIdM_TrackIdM_PFJet30_prescale", data.hlt.Ele12_CaloIdM_TrackIdM_PFJet30_prescale);
    //stream.select("HLT_Ele18_CaloIdM_TrackIdM_PFJet30", data.hlt.Ele18_CaloIdM_TrackIdM_PFJet30);
    //stream.select("HLT_Ele18_CaloIdM_TrackIdM_PFJet30_prescale", data.hlt.Ele18_CaloIdM_TrackIdM_PFJet30_prescale);
    //stream.select("HLT_Ele23_CaloIdM_TrackIdM_PFJet30", data.hlt.Ele23_CaloIdM_TrackIdM_PFJet30);
    //stream.select("HLT_Ele23_CaloIdM_TrackIdM_PFJet30_prescale", data.hlt.Ele23_CaloIdM_TrackIdM_PFJet30_prescale);
    //stream.select("HLT_Ele33_CaloIdM_TrackIdM_PFJet30", data.hlt.Ele33_CaloIdM_TrackIdM_PFJet30);
    //stream.select("HLT_Ele33_CaloIdM_TrackIdM_PFJet30_prescale", data.hlt.Ele33_CaloIdM_TrackIdM_PFJet30_prescale);
    //stream.select("HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30", data.hlt.Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30);
    //stream.select("HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_prescale", data.hlt.Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_prescale);
    //stream.select("HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30", data.hlt.Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30);
    //stream.select("HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_prescale", data.hlt.Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_prescale);
    //stream.select("HLT_Ele33_CaloIdL_TrackIdL_IsoVL_PFJet30", data.hlt.Ele33_CaloIdL_TrackIdL_IsoVL_PFJet30);
    //stream.select("HLT_Ele33_CaloIdL_TrackIdL_IsoVL_PFJet30_prescale", data.hlt.Ele33_CaloIdL_TrackIdL_IsoVL_PFJet30_prescale);
    //stream.select("HLT_Ele23_WPLoose_Gsf_CentralPFJet30_BTagCSV07", data.hlt.Ele23_WPLoose_Gsf_CentralPFJet30_BTagCSV07);
    //stream.select("HLT_Ele23_WPLoose_Gsf_CentralPFJet30_BTagCSV07_prescale", data.hlt.Ele23_WPLoose_Gsf_CentralPFJet30_BTagCSV07_prescale);
    //stream.select("HLT_Ele27_WPLoose_Gsf_CentralPFJet30_BTagCSV07", data.hlt.Ele27_WPLoose_Gsf_CentralPFJet30_BTagCSV07);
    //stream.select("HLT_Ele27_WPLoose_Gsf_CentralPFJet30_BTagCSV07_prescale", data.hlt.Ele27_WPLoose_Gsf_CentralPFJet30_BTagCSV07_prescale);
    //stream.select("HLT_Ele27_eta2p1_WPLoose_Gsf_HT200", data.hlt.Ele27_eta2p1_WPLoose_Gsf_HT200);
    //stream.select("HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_prescale", data.hlt.Ele27_eta2p1_WPLoose_Gsf_HT200_prescale);
    //stream.select("HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV0p54PF", data.hlt.Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV0p54PF);
    //stream.select("HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV0p54PF_prescale", data.hlt.Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV0p54PF_prescale);
    //stream.select("HLT_Ele15_IsoVVVL_BTagCSV0p72_PFHT400", data.hlt.Ele15_IsoVVVL_BTagCSV0p72_PFHT400);
    //stream.select("HLT_Ele15_IsoVVVL_BTagCSV0p72_PFHT400_prescale", data.hlt.Ele15_IsoVVVL_BTagCSV0p72_PFHT400_prescale);
    //stream.select("HLT_Ele15_IsoVVVL_PFHT350_PFMET50", data.hlt.Ele15_IsoVVVL_PFHT350_PFMET50);
    //stream.select("HLT_Ele15_IsoVVVL_PFHT350_PFMET50_prescale", data.hlt.Ele15_IsoVVVL_PFHT350_PFMET50_prescale);
    //stream.select("HLT_Ele15_IsoVVVL_PFHT600", data.hlt.Ele15_IsoVVVL_PFHT600);
    //stream.select("HLT_Ele15_IsoVVVL_PFHT600_prescale", data.hlt.Ele15_IsoVVVL_PFHT600_prescale);
    stream.select("HLT_Ele15_IsoVVVL_PFHT350", data.hlt.Ele15_IsoVVVL_PFHT350);
    stream.select("HLT_Ele15_IsoVVVL_PFHT350_prescale", data.hlt.Ele15_IsoVVVL_PFHT350_prescale); // unprescaled in 2015
    //stream.select("HLT_Mu3er_PFHT140_PFMET125", data.hlt.Mu3er_PFHT140_PFMET125);
    //stream.select("HLT_Mu3er_PFHT140_PFMET125_prescale", data.hlt.Mu3er_PFHT140_PFMET125_prescale);
    //stream.select("HLT_Mu6_PFHT200_PFMET80_BTagCSV0p72", data.hlt.Mu6_PFHT200_PFMET80_BTagCSV0p72);
    //stream.select("HLT_Mu6_PFHT200_PFMET80_BTagCSV0p72_prescale", data.hlt.Mu6_PFHT200_PFMET80_BTagCSV0p72_prescale);
    //stream.select("HLT_Mu6_PFHT200_PFMET100", data.hlt.Mu6_PFHT200_PFMET100);
    //stream.select("HLT_Mu6_PFHT200_PFMET100_prescale", data.hlt.Mu6_PFHT200_PFMET100_prescale);
    //stream.select("HLT_Mu10_CentralPFJet30_BTagCSV0p54PF", data.hlt.Mu10_CentralPFJet30_BTagCSV0p54PF);
    //stream.select("HLT_Mu10_CentralPFJet30_BTagCSV0p54PF_prescale", data.hlt.Mu10_CentralPFJet30_BTagCSV0p54PF_prescale);
    stream.select("HLT_Mu15_IsoVVVL_BTagCSV0p72_PFHT400", data.hlt.Mu15_IsoVVVL_BTagCSV0p72_PFHT400);
    stream.select("HLT_Mu15_IsoVVVL_BTagCSV0p72_PFHT400_prescale", data.hlt.Mu15_IsoVVVL_BTagCSV0p72_PFHT400_prescale);
    //stream.select("HLT_Mu15_IsoVVVL_PFHT350_PFMET50", data.hlt.Mu15_IsoVVVL_PFHT350_PFMET50);
    //stream.select("HLT_Mu15_IsoVVVL_PFHT350_PFMET50_prescale", data.hlt.Mu15_IsoVVVL_PFHT350_PFMET50_prescale);
    //stream.select("HLT_Mu15_IsoVVVL_PFHT600", data.hlt.Mu15_IsoVVVL_PFHT600);
    //stream.select("HLT_Mu15_IsoVVVL_PFHT600_prescale", data.hlt.Mu15_IsoVVVL_PFHT600_prescale);
    stream.select("HLT_Mu15_IsoVVVL_PFHT350", data.hlt.Mu15_IsoVVVL_PFHT350);
    stream.select("HLT_Mu15_IsoVVVL_PFHT350_prescale", data.hlt.Mu15_IsoVVVL_PFHT350_prescale); // unprescaled in 2015
    //stream.select("HLT_Mu8", data.hlt.Mu8);
    //stream.select("HLT_Mu8_prescale", data.hlt.Mu8_prescale);
    //stream.select("HLT_Mu17", data.hlt.Mu17);
    //stream.select("HLT_Mu17_prescale", data.hlt.Mu17_prescale);
    //stream.select("HLT_Mu20", data.hlt.Mu20);
    //stream.select("HLT_Mu20_prescale", data.hlt.Mu20_prescale);
    //stream.select("HLT_TkMu20", data.hlt.TkMu20);
    //stream.select("HLT_TkMu20_prescale", data.hlt.TkMu20_prescale);
    //stream.select("HLT_Mu24_eta2p1", data.hlt.Mu24_eta2p1);
    //stream.select("HLT_Mu24_eta2p1_prescale", data.hlt.Mu24_eta2p1_prescale);
    //stream.select("HLT_TkMu24_eta2p1", data.hlt.TkMu24_eta2p1);
    //stream.select("HLT_TkMu24_eta2p1_prescale", data.hlt.TkMu24_eta2p1_prescale);
    //stream.select("HLT_Mu27", data.hlt.Mu27);
    //stream.select("HLT_Mu27_prescale", data.hlt.Mu27_prescale);
    //stream.select("HLT_TkMu27", data.hlt.TkMu27);
    //stream.select("HLT_TkMu27_prescale", data.hlt.TkMu27_prescale);
    stream.select("HLT_Mu45_eta2p1", data.hlt.Mu45_eta2p1);
    stream.select("HLT_Mu45_eta2p1_prescale", data.hlt.Mu45_eta2p1_prescale); // unprescaled
    stream.select("HLT_Mu50", data.hlt.Mu50);
    stream.select("HLT_Mu50_prescale", data.hlt.Mu50_prescale);
    stream.select("HLT_Mu55", data.hlt.Mu55);
    stream.select("HLT_Mu55_prescale", data.hlt.Mu55_prescale);
    //stream.select("HLT_Mu300", data.hlt.Mu300);
    //stream.select("HLT_Mu300_prescale", data.hlt.Mu300_prescale);
    //stream.select("HLT_Mu350", data.hlt.Mu350);
    //stream.select("HLT_Mu350_prescale", data.hlt.Mu350_prescale);
    //stream.select("HLT_Ele105_CaloIdVT_GsfTrkIdT", data.hlt.Ele105_CaloIdVT_GsfTrkIdT);
    //stream.select("HLT_Ele105_CaloIdVT_GsfTrkIdT_prescale", data.hlt.Ele105_CaloIdVT_GsfTrkIdT_prescale);
    //stream.select("HLT_Ele115_CaloIdVT_GsfTrkIdT", data.hlt.Ele115_CaloIdVT_GsfTrkIdT);
    //stream.select("HLT_Ele115_CaloIdVT_GsfTrkIdT_prescale", data.hlt.Ele115_CaloIdVT_GsfTrkIdT_prescale);
    //stream.select("HLT_IsoMu17_eta2p1", data.hlt.IsoMu17_eta2p1);
    //stream.select("HLT_IsoMu17_eta2p1_prescale", data.hlt.IsoMu17_eta2p1_prescale);
    stream.select("HLT_IsoMu18", data.hlt.IsoMu18);
    stream.select("HLT_IsoMu18_prescale", data.hlt.IsoMu18_prescale); // unprescaled
    stream.select("HLT_OldIsoMu18", data.hlt.OldIsoMu18);
    stream.select("HLT_OldIsoMu18_prescale", data.hlt.OldIsoMu18_prescale);
    stream.select("HLT_IsoTkMu18", data.hlt.IsoTkMu18);
    stream.select("HLT_IsoTkMu18_prescale", data.hlt.IsoTkMu18_prescale);
    stream.select("HLT_OldIsoTkMu18", data.hlt.OldIsoTkMu18);
    stream.select("HLT_OldIsoTkMu18_prescale", data.hlt.OldIsoTkMu18_prescale);
    stream.select("HLT_IsoMu20", data.hlt.IsoMu20);
    stream.select("HLT_IsoMu20_prescale", data.hlt.IsoMu20_prescale);
    stream.select("HLT_IsoMu22", data.hlt.IsoMu22);
    stream.select("HLT_IsoMu22_prescale", data.hlt.IsoMu22_prescale);
    stream.select("HLT_IsoMu27", data.hlt.IsoMu27);
    stream.select("HLT_IsoMu27_prescale", data.hlt.IsoMu27_prescale);
    stream.select("HLT_IsoTkMu24_eta2p1", data.hlt.IsoTkMu24_eta2p1);
    stream.select("HLT_IsoTkMu24_eta2p1_prescale", data.hlt.IsoTkMu24_eta2p1_prescale);
    stream.select("HLT_IsoTkMu27", data.hlt.IsoTkMu27);
    stream.select("HLT_IsoTkMu27_prescale", data.hlt.IsoTkMu27_prescale);
    //stream.select("HLT_Mu8_TrkIsoVVL", data.hlt.Mu8_TrkIsoVVL);
    //stream.select("HLT_Mu8_TrkIsoVVL_prescale", data.hlt.Mu8_TrkIsoVVL_prescale);
    //stream.select("HLT_Mu17_TrkIsoVVL", data.hlt.Mu17_TrkIsoVVL);
    //stream.select("HLT_Mu17_TrkIsoVVL_prescale", data.hlt.Mu17_TrkIsoVVL_prescale);
    stream.select("HLT_Ele22_eta2p1_WPLoose_Gsf", data.hlt.Ele22_eta2p1_WPLoose_Gsf); // unprescaled
    stream.select("HLT_Ele22_eta2p1_WPLoose_Gsf_prescale", data.hlt.Ele22_eta2p1_WPLoose_Gsf_prescale);
    stream.select("HLT_Ele22_eta2p1_WPTight_Gsf", data.hlt.Ele22_eta2p1_WPTight_Gsf);
    stream.select("HLT_Ele22_eta2p1_WPTight_Gsf_prescale", data.hlt.Ele22_eta2p1_WPTight_Gsf_prescale);
    stream.select("HLT_Ele23_WPLoose_Gsf", data.hlt.Ele23_WPLoose_Gsf);
    stream.select("HLT_Ele23_WPLoose_Gsf_prescale", data.hlt.Ele23_WPLoose_Gsf_prescale);
    stream.select("HLT_Ele27_WPLoose_Gsf", data.hlt.Ele27_WPLoose_Gsf);
    stream.select("HLT_Ele27_WPLoose_Gsf_prescale", data.hlt.Ele27_WPLoose_Gsf_prescale);
    stream.select("HLT_Ele27_eta2p1_WPLoose_Gsf", data.hlt.Ele27_eta2p1_WPLoose_Gsf);
    stream.select("HLT_Ele27_eta2p1_WPLoose_Gsf_prescale", data.hlt.Ele27_eta2p1_WPLoose_Gsf_prescale);
    stream.select("HLT_Ele27_eta2p1_WPTight_Gsf", data.hlt.Ele27_eta2p1_WPTight_Gsf);
    stream.select("HLT_Ele27_eta2p1_WPTight_Gsf_prescale", data.hlt.Ele27_eta2p1_WPTight_Gsf_prescale);
    stream.select("HLT_Ele32_eta2p1_WPTight_Gsf", data.hlt.Ele32_eta2p1_WPTight_Gsf);
    stream.select("HLT_Ele32_eta2p1_WPTight_Gsf_prescale", data.hlt.Ele32_eta2p1_WPTight_Gsf_prescale);
    //stream.select("HLT_Ele12_CaloIdL_TrackIdL_IsoVL", data.hlt.Ele12_CaloIdL_TrackIdL_IsoVL);
    //stream.select("HLT_Ele12_CaloIdL_TrackIdL_IsoVL_prescale", data.hlt.Ele12_CaloIdL_TrackIdL_IsoVL_prescale);
    //stream.select("HLT_Ele17_CaloIdL_TrackIdL_IsoVL", data.hlt.Ele17_CaloIdL_TrackIdL_IsoVL);
    //stream.select("HLT_Ele17_CaloIdL_TrackIdL_IsoVL_prescale", data.hlt.Ele17_CaloIdL_TrackIdL_IsoVL_prescale);
    //stream.select("HLT_Ele23_CaloIdL_TrackIdL_IsoVL", data.hlt.Ele23_CaloIdL_TrackIdL_IsoVL);
    //stream.select("HLT_Ele23_CaloIdL_TrackIdL_IsoVL_prescale", data.hlt.Ele23_CaloIdL_TrackIdL_IsoVL_prescale);
    
    stream.select("gen_size", data.gen.size);
    stream.select("gen_ID", data.gen.ID);
    stream.select("gen_Status", data.gen.Status);
    stream.select("gen_Mom0ID", data.gen.Mom0ID);
    stream.select("gen_Mom0Status", data.gen.Mom0Status);
    stream.select("gen_Mom1ID", data.gen.Mom1ID);
    stream.select("gen_Mom1Status", data.gen.Mom1Status);
    stream.select("gen_Dau0ID", data.gen.Dau0ID);
    stream.select("gen_Dau0Status", data.gen.Dau0Status);
    stream.select("gen_Dau1ID", data.gen.Dau1ID);
    stream.select("gen_Dau1Status", data.gen.Dau1Status);
    stream.select("gen_Pt", data.gen.Pt);
    stream.select("gen_Eta", data.gen.Eta);
    stream.select("gen_Phi", data.gen.Phi);
    stream.select("gen_E", data.gen.E);
    //stream.select("gen_Mass", data.gen.Mass);
    //stream.select("gen_Charge", data.gen.Charge);
    
    stream.select("el_size", data.ele.size);
    stream.select("el_Pt", data.ele.Pt);
    stream.select("el_Eta", data.ele.Eta);
    stream.select("el_Phi", data.ele.Phi);
    stream.select("el_E", data.ele.E);
    //stream.select("el_Charge", data.ele.Charge);
    //stream.select("el_Key", data.ele.Key);
    stream.select("el_Iso03", data.ele.Iso03);
    stream.select("el_Iso03db", data.ele.Iso03db);
    stream.select("el_MiniIso", data.ele.MiniIso);
    //stream.select("el_rho", data.ele.rho);
    //stream.select("el_EA", data.ele.EA);
    //stream.select("el_sumChargedHadronPt", data.ele.sumChargedHadronPt);
    //stream.select("el_sumNeutralHadronEt", data.ele.sumNeutralHadronEt);
    //stream.select("el_sumPhotonEt", data.ele.sumPhotonEt);
    //stream.select("el_sumPUPt", data.ele.sumPUPt);
    //stream.select("el_D0", data.ele.D0);
    //stream.select("el_Dz", data.ele.Dz);
    //stream.select("el_dEtaIn", data.ele.dEtaIn);
    //stream.select("el_dPhiIn", data.ele.dPhiIn);
    //stream.select("el_HoE", data.ele.HoE);
    //stream.select("el_full5x5siee", data.ele.full5x5siee);
    //stream.select("el_ooEmooP", data.ele.ooEmooP);
    //stream.select("el_missHits", data.ele.missHits);
    //stream.select("el_hasMatchedConVeto", data.ele.hasMatchedConVeto);
    stream.select("el_vidVeto", data.ele.vidVeto);
    stream.select("el_vidLoose", data.ele.vidLoose);
    stream.select("el_vidTight", data.ele.vidTight);
    stream.select("el_vidMedium", data.ele.vidMedium);
    stream.select("el_vidHEEP", data.ele.vidHEEP);
    stream.select("el_vidHEEPnoiso", data.ele.vidHEEPnoiso);
    //stream.select("el_SCEta", data.ele.SCEta);
    //stream.select("el_SCPhi", data.ele.SCPhi);
    //stream.select("el_IsPartOfNearAK4Jet", data.ele.IsPartOfNearAK4Jet);
    stream.select("el_IsPartOfNearAK8Jet", data.ele.IsPartOfNearAK8Jet);
    stream.select("el_IsPartOfNearSubjet", data.ele.IsPartOfNearSubjet);
    stream.select("el_DRNearGenEleFromSLTop", data.ele.DRNearGenEleFromSLTop);
    stream.select("el_PtNearGenEleFromSLTop", data.ele.PtNearGenEleFromSLTop);
    stream.select("el_PtNearGenTop", data.ele.PtNearGenTop);
    stream.select("el_LepAK4JetFrac", data.ele.LepAK4JetFrac);
    stream.select("el_LepAK8JetFrac", data.ele.LepAK8JetFrac);
    stream.select("el_LepSubjetFrac", data.ele.LepSubjetFrac);
    stream.select("el_LepAK4JetMassDrop", data.ele.LepAK4JetMassDrop);
    stream.select("el_LepAK8JetMassDrop", data.ele.LepAK8JetMassDrop);
    stream.select("el_LepSubjetMassDrop", data.ele.LepSubjetMassDrop);
    stream.select("el_AK4JetV1DR", data.ele.AK4JetV1DR);
    stream.select("el_AK4JetV2DR", data.ele.AK4JetV2DR);
    stream.select("el_AK4JetV3DR", data.ele.AK4JetV3DR);
    stream.select("el_AK8JetV1DR", data.ele.AK8JetV1DR);
    stream.select("el_AK8JetV2DR", data.ele.AK8JetV2DR);
    stream.select("el_AK8JetV3DR", data.ele.AK8JetV3DR);
    stream.select("el_SubjetV1DR", data.ele.SubjetV1DR);
    stream.select("el_SubjetV2DR", data.ele.SubjetV2DR);
    stream.select("el_SubjetV3DR", data.ele.SubjetV3DR);
    stream.select("el_AK4JetV1PtRel", data.ele.AK4JetV1PtRel);
    stream.select("el_AK4JetV2PtRel", data.ele.AK4JetV2PtRel);
    stream.select("el_AK4JetV3PtRel", data.ele.AK4JetV3PtRel);
    stream.select("el_AK8JetV1PtRel", data.ele.AK8JetV1PtRel);
    stream.select("el_AK8JetV2PtRel", data.ele.AK8JetV2PtRel);
    stream.select("el_AK8JetV3PtRel", data.ele.AK8JetV3PtRel);
    stream.select("el_SubjetV1PtRel", data.ele.SubjetV1PtRel);
    stream.select("el_SubjetV2PtRel", data.ele.SubjetV2PtRel);
    stream.select("el_SubjetV3PtRel", data.ele.SubjetV3PtRel);
    
    stream.select("mu_size", data.mu.size);
    stream.select("mu_Pt", data.mu.Pt);
    stream.select("mu_Eta", data.mu.Eta);
    stream.select("mu_Phi", data.mu.Phi);
    stream.select("mu_E", data.mu.E);
    //stream.select("mu_Charge", data.mu.Charge);
    //stream.select("mu_Key", data.mu.Key);
    stream.select("mu_Iso04", data.mu.Iso04);
    stream.select("mu_MiniIso", data.mu.MiniIso);
    //stream.select("mu_D0", data.mu.D0);
    //stream.select("mu_D0err", data.mu.D0err);
    //stream.select("mu_Dxy", data.mu.Dxy);
    //stream.select("mu_Dxyerr", data.mu.Dxyerr);
    //stream.select("mu_Dz", data.mu.Dz);
    //stream.select("mu_Dzerr", data.mu.Dzerr);
    stream.select("mu_IsSoftMuon", data.mu.IsSoftMuon);
    stream.select("mu_IsLooseMuon", data.mu.IsLooseMuon);
    stream.select("mu_IsMediumMuon", data.mu.IsMediumMuon);
    stream.select("mu_IsTightMuon", data.mu.IsTightMuon);
    //stream.select("mu_IsHighPtMuon", data.mu.IsHighPtMuon);
    //stream.select("mu_IsPFMuon", data.mu.IsPFMuon);
    //stream.select("mu_IsGlobalMuon", data.mu.IsGlobalMuon);
    //stream.select("mu_IsTrackerMuon", data.mu.IsTrackerMuon);
    //stream.select("mu_GlbTrkNormChi2", data.mu.GlbTrkNormChi2);
    //stream.select("mu_NumberValidMuonHits", data.mu.NumberValidMuonHits);
    //stream.select("mu_NumberMatchedStations", data.mu.NumberMatchedStations);
    //stream.select("mu_NumberValidPixelHits", data.mu.NumberValidPixelHits);
    //stream.select("mu_NumberTrackerLayers", data.mu.NumberTrackerLayers);
    //stream.select("mu_NumberOfValidTrackerHits", data.mu.NumberOfValidTrackerHits);
    //stream.select("mu_NumberOfPixelLayers", data.mu.NumberOfPixelLayers);
    //stream.select("mu_InTrkNormChi2", data.mu.InTrkNormChi2);
    //stream.select("mu_SumChargedHadronPt", data.mu.SumChargedHadronPt);
    //stream.select("mu_SumNeutralHadronPt", data.mu.SumNeutralHadronPt);
    //stream.select("mu_SumPhotonPt", data.mu.SumPhotonPt);
    //stream.select("mu_SumPUPt", data.mu.SumPUPt);
    //stream.select("mu_GenMuonY", data.mu.GenMuonY);
    //stream.select("mu_GenMuonEta", data.mu.GenMuonEta);
    //stream.select("mu_GenMuonPhi", data.mu.GenMuonPhi);
    stream.select("mu_GenMuonPt", data.mu.GenMuonPt);
    //stream.select("mu_GenMuonE", data.mu.GenMuonE);
    //stream.select("mu_GenMuonCharge", data.mu.GenMuonCharge);
    stream.select("mu_IsPartOfNearAK4Jet", data.mu.IsPartOfNearAK4Jet);
    stream.select("mu_IsPartOfNearAK8Jet", data.mu.IsPartOfNearAK8Jet);
    stream.select("mu_IsPartOfNearSubjet", data.mu.IsPartOfNearSubjet);
    stream.select("mu_DRNearGenMuFromSLTop", data.mu.DRNearGenMuFromSLTop);
    stream.select("mu_PtNearGenMuFromSLTop", data.mu.PtNearGenMuFromSLTop);
    stream.select("mu_PtNearGenTop", data.mu.PtNearGenTop);
    stream.select("mu_LepAK4JetFrac", data.mu.LepAK4JetFrac);
    stream.select("mu_LepAK8JetFrac", data.mu.LepAK8JetFrac);
    stream.select("mu_LepSubjetFrac", data.mu.LepSubjetFrac);
    stream.select("mu_LepAK4JetMassDrop", data.mu.LepAK4JetMassDrop);
    stream.select("mu_LepAK8JetMassDrop", data.mu.LepAK8JetMassDrop);
    stream.select("mu_LepSubjetMassDrop", data.mu.LepSubjetMassDrop);
    stream.select("mu_AK4JetV1DR", data.mu.AK4JetV1DR);
    stream.select("mu_AK4JetV2DR", data.mu.AK4JetV2DR);
    stream.select("mu_AK4JetV3DR", data.mu.AK4JetV3DR);
    stream.select("mu_AK8JetV1DR", data.mu.AK8JetV1DR);
    stream.select("mu_AK8JetV2DR", data.mu.AK8JetV2DR);
    stream.select("mu_AK8JetV3DR", data.mu.AK8JetV3DR);
    stream.select("mu_SubjetV1DR", data.mu.SubjetV1DR);
    stream.select("mu_SubjetV2DR", data.mu.SubjetV2DR);
    stream.select("mu_SubjetV3DR", data.mu.SubjetV3DR);
    stream.select("mu_AK4JetV1PtRel", data.mu.AK4JetV1PtRel);
    stream.select("mu_AK4JetV2PtRel", data.mu.AK4JetV2PtRel);
    stream.select("mu_AK4JetV3PtRel", data.mu.AK4JetV3PtRel);
    stream.select("mu_AK8JetV1PtRel", data.mu.AK8JetV1PtRel);
    stream.select("mu_AK8JetV2PtRel", data.mu.AK8JetV2PtRel);
    stream.select("mu_AK8JetV3PtRel", data.mu.AK8JetV3PtRel);
    stream.select("mu_SubjetV1PtRel", data.mu.SubjetV1PtRel);
    stream.select("mu_SubjetV2PtRel", data.mu.SubjetV2PtRel);
    stream.select("mu_SubjetV3PtRel", data.mu.SubjetV3PtRel);
    
    stream.select("jetAK4_size", data.jetsAK4.size);
    stream.select("jetAK4_Pt", data.jetsAK4.Pt);
    stream.select("jetAK4_Eta", data.jetsAK4.Eta);
    stream.select("jetAK4_Phi", data.jetsAK4.Phi);
    stream.select("jetAK4_E", data.jetsAK4.E);
    //stream.select("jetAK4_Charge", data.jetsAK4.Charge);
    stream.select("jetAK4_CSVv2", data.jetsAK4.CSVv2);
    stream.select("jetAK4_DoubleBAK8", data.jetsAK4.DoubleBAK8);
    stream.select("jetAK4_DoubleBCA15", data.jetsAK4.DoubleBCA15);
    stream.select("jetAK4_CMVAv2", data.jetsAK4.CMVAv2);
    stream.select("jetAK4_CvsL", data.jetsAK4.CvsL);
    stream.select("jetAK4_CvsB", data.jetsAK4.CvsB);
    stream.select("jetAK4_CMVA", data.jetsAK4.CMVA);
    //stream.select("jetAK4_GenPartonY", data.jetsAK4.GenPartonY);
    //stream.select("jetAK4_GenPartonEta", data.jetsAK4.GenPartonEta);
    //stream.select("jetAK4_GenPartonPhi", data.jetsAK4.GenPartonPhi);
    stream.select("jetAK4_GenPartonPt", data.jetsAK4.GenPartonPt);
    //stream.select("jetAK4_GenPartonE", data.jetsAK4.GenPartonE);
    //stream.select("jetAK4_GenPartonCharge", data.jetsAK4.GenPartonCharge);
    //stream.select("jetAK4_PartonFlavour", data.jetsAK4.PartonFlavour);
    //stream.select("jetAK4_HadronFlavour", data.jetsAK4.HadronFlavour);
    //stream.select("jetAK4_GenJetY", data.jetsAK4.GenJetY);
    //stream.select("jetAK4_GenJetEta", data.jetsAK4.GenJetEta);
    //stream.select("jetAK4_GenJetPhi", data.jetsAK4.GenJetPhi);
    stream.select("jetAK4_GenJetPt", data.jetsAK4.GenJetPt);
    //stream.select("jetAK4_GenJetE", data.jetsAK4.GenJetE);
    //stream.select("jetAK4_GenJetCharge", data.jetsAK4.GenJetCharge);
    //stream.select("jetAK4_muonMultiplicity", data.jetsAK4.muonMultiplicity);
    //stream.select("jetAK4_PhotonEnergy", data.jetsAK4.PhotonEnergy);
    //stream.select("jetAK4_ElectronEnergy", data.jetsAK4.ElectronEnergy);
    //stream.select("jetAK4_MuonEnergy", data.jetsAK4.MuonEnergy);
    //stream.select("jetAK4_HFHadronEnergy", data.jetsAK4.HFHadronEnergy);
    //stream.select("jetAK4_HFEMEnergy", data.jetsAK4.HFEMEnergy);
    //stream.select("jetAK4_ChargedHadronMultiplicity", data.jetsAK4.ChargedHadronMultiplicity);
    //stream.select("jetAK4_numberOfDaughters", data.jetsAK4.numberOfDaughters);
    //stream.select("jetAK4_neutralHadronMultiplicity", data.jetsAK4.neutralHadronMultiplicity);
    stream.select("jetAK4_neutralHadronEnergy", data.jetsAK4.neutralHadronEnergy);
    stream.select("jetAK4_neutralEmEnergy", data.jetsAK4.neutralEmEnergy);
    stream.select("jetAK4_chargedEmEnergy", data.jetsAK4.chargedEmEnergy);
    stream.select("jetAK4_chargedHadronEnergy", data.jetsAK4.chargedHadronEnergy);
    //stream.select("jetAK4_photonMultiplicity", data.jetsAK4.photonMultiplicity);
    //stream.select("jetAK4_electronMultiplicity", data.jetsAK4.electronMultiplicity);
    //stream.select("jetAK4_HFHadronMultiplicity", data.jetsAK4.HFHadronMultiplicity);
    //stream.select("jetAK4_HFEMMultiplicity", data.jetsAK4.HFEMMultiplicity);
    //stream.select("jetAK4_ChargeMuEnergy", data.jetsAK4.ChargeMuEnergy);
    stream.select("jetAK4_neutralMultiplicity", data.jetsAK4.neutralMultiplicity);
    //stream.select("jetAK4_neutralHadronEnergyFrac", data.jetsAK4.neutralHadronEnergyFrac);
    //stream.select("jetAK4_neutralEmEnergyFrac", data.jetsAK4.neutralEmEnergyFrac);
    //stream.select("jetAK4_chargedHadronEnergyFrac", data.jetsAK4.chargedHadronEnergyFrac);
    //stream.select("jetAK4_muonEnergyFrac", data.jetsAK4.muonEnergyFrac);
    //stream.select("jetAK4_chargedEmEnergyFrac", data.jetsAK4.chargedEmEnergyFrac);
    stream.select("jetAK4_chargedMultiplicity", data.jetsAK4.chargedMultiplicity);
    //stream.select("jetAK4_NumConstituents", data.jetsAK4.NumConstituents);
    //stream.select("jetAK4_jecFactor0", data.jetsAK4.jecFactor0);
    //stream.select("jetAK4_jecFactorL3Absolute", data.jetsAK4.jecFactorL3Absolute);
    //stream.select("jetAK4_jetArea", data.jetsAK4.jetArea);
    //stream.select("jetAK4_nSV", data.jetsAK4.nSV);
    //stream.select("jetAK4_SV0mass", data.jetsAK4.SV0mass);
    //stream.select("jetAK4_SV1mass", data.jetsAK4.SV1mass);
    //stream.select("jetAK4_QGL", data.jetsAK4.QGL);
    stream.select("jetAK4_jecUncertainty", data.jetsAK4.jecUncertainty);
    //stream.select("jetAK4_PtResolution", data.jetsAK4.PtResolution);
    stream.select("jetAK4_JERSF", data.jetsAK4.JERSF);
    stream.select("jetAK4_JERSFUp", data.jetsAK4.JERSFUp);
    stream.select("jetAK4_JERSFDown", data.jetsAK4.JERSFDown);
    stream.select("jetAK4_SmearedPt", data.jetsAK4.SmearedPt);
    //stream.select("jetAK4_SmearedPEta", data.jetsAK4.SmearedPEta);
    //stream.select("jetAK4_SmearedPhi", data.jetsAK4.SmearedPhi);
    //stream.select("jetAK4_SmearedE", data.jetsAK4.SmearedE);
    //stream.select("jetAK4_Keys", data.jetsAK4.Keys);
    
    stream.select("jetAK4Puppi_size", data.jetsAK4Puppi.size);
    stream.select("jetAK4Puppi_Pt", data.jetsAK4Puppi.Pt);
    stream.select("jetAK4Puppi_Eta", data.jetsAK4Puppi.Eta);
    stream.select("jetAK4Puppi_Phi", data.jetsAK4Puppi.Phi);
    stream.select("jetAK4Puppi_E", data.jetsAK4Puppi.E);
    //stream.select("jetAK4Puppi_Charge", data.jetsAK4Puppi.Charge);
    stream.select("jetAK4Puppi_CSVv2", data.jetsAK4Puppi.CSVv2);
    stream.select("jetAK4Puppi_DoubleBAK8", data.jetsAK4Puppi.DoubleBAK8);
    stream.select("jetAK4Puppi_DoubleBCA15", data.jetsAK4Puppi.DoubleBCA15);
    stream.select("jetAK4Puppi_CMVAv2", data.jetsAK4Puppi.CMVAv2);
    stream.select("jetAK4Puppi_CvsL", data.jetsAK4Puppi.CvsL);
    stream.select("jetAK4Puppi_CvsB", data.jetsAK4Puppi.CvsB);
    stream.select("jetAK4Puppi_CMVA", data.jetsAK4Puppi.CMVA);
    //stream.select("jetAK4Puppi_GenPartonY", data.jetsAK4Puppi.GenPartonY);
    //stream.select("jetAK4Puppi_GenPartonEta", data.jetsAK4Puppi.GenPartonEta);
    //stream.select("jetAK4Puppi_GenPartonPhi", data.jetsAK4Puppi.GenPartonPhi);
    stream.select("jetAK4Puppi_GenPartonPt", data.jetsAK4Puppi.GenPartonPt);
    //stream.select("jetAK4Puppi_GenPartonE", data.jetsAK4Puppi.GenPartonE);
    //stream.select("jetAK4Puppi_GenPartonCharge", data.jetsAK4Puppi.GenPartonCharge);
    //stream.select("jetAK4Puppi_PartonFlavour", data.jetsAK4Puppi.PartonFlavour);
    //stream.select("jetAK4Puppi_HadronFlavour", data.jetsAK4Puppi.HadronFlavour);
    //stream.select("jetAK4Puppi_GenJetY", data.jetsAK4Puppi.GenJetY);
    //stream.select("jetAK4Puppi_GenJetEta", data.jetsAK4Puppi.GenJetEta);
    //stream.select("jetAK4Puppi_GenJetPhi", data.jetsAK4Puppi.GenJetPhi);
    stream.select("jetAK4Puppi_GenJetPt", data.jetsAK4Puppi.GenJetPt);
    //stream.select("jetAK4Puppi_GenJetE", data.jetsAK4Puppi.GenJetE);
    //stream.select("jetAK4Puppi_GenJetCharge", data.jetsAK4Puppi.GenJetCharge);
    //stream.select("jetAK4Puppi_muonMultiplicity", data.jetsAK4Puppi.muonMultiplicity);
    //stream.select("jetAK4Puppi_PhotonEnergy", data.jetsAK4Puppi.PhotonEnergy);
    //stream.select("jetAK4Puppi_ElectronEnergy", data.jetsAK4Puppi.ElectronEnergy);
    //stream.select("jetAK4Puppi_MuonEnergy", data.jetsAK4Puppi.MuonEnergy);
    //stream.select("jetAK4Puppi_HFHadronEnergy", data.jetsAK4Puppi.HFHadronEnergy);
    //stream.select("jetAK4Puppi_HFEMEnergy", data.jetsAK4Puppi.HFEMEnergy);
    //stream.select("jetAK4Puppi_ChargedHadronMultiplicity", data.jetsAK4Puppi.ChargedHadronMultiplicity);
    //stream.select("jetAK4Puppi_numberOfDaughters", data.jetsAK4Puppi.numberOfDaughters);
    //stream.select("jetAK4Puppi_neutralHadronMultiplicity", data.jetsAK4Puppi.neutralHadronMultiplicity);
    stream.select("jetAK4Puppi_neutralHadronEnergy", data.jetsAK4Puppi.neutralHadronEnergy);
    stream.select("jetAK4Puppi_neutralEmEnergy", data.jetsAK4Puppi.neutralEmEnergy);
    stream.select("jetAK4Puppi_chargedEmEnergy", data.jetsAK4Puppi.chargedEmEnergy);
    stream.select("jetAK4Puppi_chargedHadronEnergy", data.jetsAK4Puppi.chargedHadronEnergy);
    //stream.select("jetAK4Puppi_photonMultiplicity", data.jetsAK4Puppi.photonMultiplicity);
    //stream.select("jetAK4Puppi_electronMultiplicity", data.jetsAK4Puppi.electronMultiplicity);
    //stream.select("jetAK4Puppi_HFHadronMultiplicity", data.jetsAK4Puppi.HFHadronMultiplicity);
    //stream.select("jetAK4Puppi_HFEMMultiplicity", data.jetsAK4Puppi.HFEMMultiplicity);
    //stream.select("jetAK4Puppi_ChargeMuEnergy", data.jetsAK4Puppi.ChargeMuEnergy);
    stream.select("jetAK4Puppi_neutralMultiplicity", data.jetsAK4Puppi.neutralMultiplicity);
    //stream.select("jetAK4Puppi_neutralHadronEnergyFrac", data.jetsAK4Puppi.neutralHadronEnergyFrac);
    //stream.select("jetAK4Puppi_neutralEmEnergyFrac", data.jetsAK4Puppi.neutralEmEnergyFrac);
    //stream.select("jetAK4Puppi_chargedHadronEnergyFrac", data.jetsAK4Puppi.chargedHadronEnergyFrac);
    //stream.select("jetAK4Puppi_muonEnergyFrac", data.jetsAK4Puppi.muonEnergyFrac);
    //stream.select("jetAK4Puppi_chargedEmEnergyFrac", data.jetsAK4Puppi.chargedEmEnergyFrac);
    stream.select("jetAK4Puppi_chargedMultiplicity", data.jetsAK4Puppi.chargedMultiplicity);
    //stream.select("jetAK4Puppi_NumConstituents", data.jetsAK4Puppi.NumConstituents);
    //stream.select("jetAK4Puppi_jecFactor0", data.jetsAK4Puppi.jecFactor0);
    //stream.select("jetAK4Puppi_jecFactorL3Absolute", data.jetsAK4Puppi.jecFactorL3Absolute);
    //stream.select("jetAK4Puppi_jetArea", data.jetsAK4Puppi.jetArea);
    //stream.select("jetAK4Puppi_nSV", data.jetsAK4Puppi.nSV);
    //stream.select("jetAK4Puppi_SV0mass", data.jetsAK4Puppi.SV0mass);
    //stream.select("jetAK4Puppi_SV1mass", data.jetsAK4Puppi.SV1mass);
    stream.select("jetAK4Puppi_jecUncertainty", data.jetsAK4Puppi.jecUncertainty);
    //stream.select("jetAK4Puppi_PtResolution", data.jetsAK4Puppi.PtResolution);
    stream.select("jetAK4Puppi_JERSF", data.jetsAK4Puppi.JERSF);
    stream.select("jetAK4Puppi_JERSFUp", data.jetsAK4Puppi.JERSFUp);
    stream.select("jetAK4Puppi_JERSFDown", data.jetsAK4Puppi.JERSFDown);
    //stream.select("jetAK4Puppi_SmearedPt", data.jetsAK4Puppi.SmearedPt);
    //stream.select("jetAK4Puppi_SmearedPEta", data.jetsAK4Puppi.SmearedPEta);
    //stream.select("jetAK4Puppi_SmearedPhi", data.jetsAK4Puppi.SmearedPhi);
    //stream.select("jetAK4Puppi_SmearedE", data.jetsAK4Puppi.SmearedE);
    //stream.select("jetAK4Puppi_Keys", data.jetsAK4Puppi.Keys);
    
    stream.select("jetAK8_size", data.jetsAK8.size);
    stream.select("jetAK8_Pt", data.jetsAK8.Pt);
    stream.select("jetAK8_Eta", data.jetsAK8.Eta);
    stream.select("jetAK8_Phi", data.jetsAK8.Phi);
    stream.select("jetAK8_E", data.jetsAK8.E);
    //stream.select("jetAK8_Charge", data.jetsAK8.Charge);
    stream.select("jetAK8_CSVv2", data.jetsAK8.CSVv2);
    stream.select("jetAK8_DoubleBAK8", data.jetsAK8.DoubleBAK8);
    stream.select("jetAK8_DoubleBCA15", data.jetsAK8.DoubleBCA15);
    stream.select("jetAK8_CMVAv2", data.jetsAK8.CMVAv2);
    stream.select("jetAK8_CvsL", data.jetsAK8.CvsL);
    stream.select("jetAK8_CvsB", data.jetsAK8.CvsB);
    stream.select("jetAK8_CMVA", data.jetsAK8.CMVA);
    //stream.select("jetAK8_GenPartonY", data.jetsAK8.GenPartonY);
    //stream.select("jetAK8_GenPartonEta", data.jetsAK8.GenPartonEta);
    //stream.select("jetAK8_GenPartonPhi", data.jetsAK8.GenPartonPhi);
    stream.select("jetAK8_GenPartonPt", data.jetsAK8.GenPartonPt);
    //stream.select("jetAK8_GenPartonE", data.jetsAK8.GenPartonE);
    //stream.select("jetAK8_GenPartonCharge", data.jetsAK8.GenPartonCharge);
    //stream.select("jetAK8_PartonFlavour", data.jetsAK8.PartonFlavour);
    //stream.select("jetAK8_HadronFlavour", data.jetsAK8.HadronFlavour);
    //stream.select("jetAK8_GenJetY", data.jetsAK8.GenJetY);
    //stream.select("jetAK8_GenJetEta", data.jetsAK8.GenJetEta);
    //stream.select("jetAK8_GenJetPhi", data.jetsAK8.GenJetPhi);
    stream.select("jetAK8_GenJetPt", data.jetsAK8.GenJetPt);
    //stream.select("jetAK8_GenJetE", data.jetsAK8.GenJetE);
    //stream.select("jetAK8_GenJetCharge", data.jetsAK8.GenJetCharge);
    //stream.select("jetAK8_muonMultiplicity", data.jetsAK8.muonMultiplicity);
    //stream.select("jetAK8_PhotonEnergy", data.jetsAK8.PhotonEnergy);
    //stream.select("jetAK8_ElectronEnergy", data.jetsAK8.ElectronEnergy);
    //stream.select("jetAK8_MuonEnergy", data.jetsAK8.MuonEnergy);
    //stream.select("jetAK8_HFHadronEnergy", data.jetsAK8.HFHadronEnergy);
    //stream.select("jetAK8_HFEMEnergy", data.jetsAK8.HFEMEnergy);
    //stream.select("jetAK8_ChargedHadronMultiplicity", data.jetsAK8.ChargedHadronMultiplicity);
    //stream.select("jetAK8_numberOfDaughters", data.jetsAK8.numberOfDaughters);
    //stream.select("jetAK8_neutralHadronMultiplicity", data.jetsAK8.neutralHadronMultiplicity);
    stream.select("jetAK8_neutralHadronEnergy", data.jetsAK8.neutralHadronEnergy);
    stream.select("jetAK8_neutralEmEnergy", data.jetsAK8.neutralEmEnergy);
    stream.select("jetAK8_chargedEmEnergy", data.jetsAK8.chargedEmEnergy);
    stream.select("jetAK8_chargedHadronEnergy", data.jetsAK8.chargedHadronEnergy);
    //stream.select("jetAK8_photonMultiplicity", data.jetsAK8.photonMultiplicity);
    //stream.select("jetAK8_electronMultiplicity", data.jetsAK8.electronMultiplicity);
    //stream.select("jetAK8_HFHadronMultiplicity", data.jetsAK8.HFHadronMultiplicity);
    //stream.select("jetAK8_HFEMMultiplicity", data.jetsAK8.HFEMMultiplicity);
    //stream.select("jetAK8_ChargeMuEnergy", data.jetsAK8.ChargeMuEnergy);
    stream.select("jetAK8_neutralMultiplicity", data.jetsAK8.neutralMultiplicity);
    //stream.select("jetAK8_neutralHadronEnergyFrac", data.jetsAK8.neutralHadronEnergyFrac);
    //stream.select("jetAK8_neutralEmEnergyFrac", data.jetsAK8.neutralEmEnergyFrac);
    //stream.select("jetAK8_chargedHadronEnergyFrac", data.jetsAK8.chargedHadronEnergyFrac);
    //stream.select("jetAK8_muonEnergyFrac", data.jetsAK8.muonEnergyFrac);
    //stream.select("jetAK8_chargedEmEnergyFrac", data.jetsAK8.chargedEmEnergyFrac);
    stream.select("jetAK8_chargedMultiplicity", data.jetsAK8.chargedMultiplicity);
    //stream.select("jetAK8_NumConstituents", data.jetsAK8.NumConstituents);
    //stream.select("jetAK8_jecFactor0", data.jetsAK8.jecFactor0);
    //stream.select("jetAK8_jecFactorL3Absolute", data.jetsAK8.jecFactorL3Absolute);
    //stream.select("jetAK8_jetArea", data.jetsAK8.jetArea);
    //stream.select("jetAK8_nSV", data.jetsAK8.nSV);
    //stream.select("jetAK8_SV0mass", data.jetsAK8.SV0mass);
    //stream.select("jetAK8_SV1mass", data.jetsAK8.SV1mass);
    stream.select("jetAK8_jecUncertainty", data.jetsAK8.jecUncertainty);
    //stream.select("jetAK8_PtResolution", data.jetsAK8.PtResolution);
    stream.select("jetAK8_JERSF", data.jetsAK8.JERSF);
    stream.select("jetAK8_JERSFUp", data.jetsAK8.JERSFUp);
    stream.select("jetAK8_JERSFDown", data.jetsAK8.JERSFDown);
    stream.select("jetAK8_SmearedPt", data.jetsAK8.SmearedPt);
    //stream.select("jetAK8_SmearedPEta", data.jetsAK8.SmearedPEta);
    //stream.select("jetAK8_SmearedPhi", data.jetsAK8.SmearedPhi);
    //stream.select("jetAK8_SmearedE", data.jetsAK8.SmearedE);
    stream.select("jetAK8_vSubjetIndex0", data.jetsAK8.vSubjetIndex0);
    stream.select("jetAK8_vSubjetIndex1", data.jetsAK8.vSubjetIndex1);
    stream.select("jetAK8_tau1", data.jetsAK8.tau1);
    stream.select("jetAK8_tau2", data.jetsAK8.tau2);
    stream.select("jetAK8_tau3", data.jetsAK8.tau3);
    stream.select("jetAK8_softDropMass", data.jetsAK8.softDropMass);
    stream.select("jetAK8_trimmedMass", data.jetsAK8.trimmedMass);
    stream.select("jetAK8_prunedMass", data.jetsAK8.prunedMass);
    stream.select("jetAK8_filteredMass", data.jetsAK8.filteredMass);
    //stream.select("jetAK8_Keys", data.jetsAK8.Keys);
    stream.select("jetAK8_HasNearGenTop", data.jetsAK8.HasNearGenTop);
    stream.select("jetAK8_NearGenTopIsHadronic", data.jetsAK8.NearGenTopIsHadronic);
    stream.select("jetAK8_NearGenWIsHadronic", data.jetsAK8.NearGenWIsHadronic);
    //stream.select("jetAK8_NearGenWToENu", data.jetsAK8.NearGenWToENu);
    //stream.select("jetAK8_NearGenWToMuNu", data.jetsAK8.NearGenWToMuNu);
    //stream.select("jetAK8_NearGenWToTauNu", data.jetsAK8.NearGenWToTauNu);
    //stream.select("jetAK8_PassTopTag", data.jetsAK8.PassTopTag);
    stream.select("jetAK8_DRNearGenTop", data.jetsAK8.DRNearGenTop);
    //stream.select("jetAK8_DRNearGenWFromTop", data.jetsAK8.DRNearGenWFromTop);
    //stream.select("jetAK8_DRNearGenBFromTop", data.jetsAK8.DRNearGenBFromTop);
    //stream.select("jetAK8_DRNearGenLepFromSLTop", data.jetsAK8.DRNearGenLepFromSLTop);
    //stream.select("jetAK8_DRNearGenNuFromSLTop", data.jetsAK8.DRNearGenNuFromSLTop);
    stream.select("jetAK8_PtNearGenTop", data.jetsAK8.PtNearGenTop);
    //stream.select("jetAK8_PtNearGenBFromTop", data.jetsAK8.PtNearGenBFromTop);
    //stream.select("jetAK8_PtNearGenWFromTop", data.jetsAK8.PtNearGenWFromTop);
    //stream.select("jetAK8_PtNearGenLepFromSLTop", data.jetsAK8.PtNearGenLepFromSLTop);
    //stream.select("jetAK8_PtNearGenNuFromSLTop", data.jetsAK8.PtNearGenNuFromSLTop);
    
    stream.select("jetAK8Puppi_size", data.jetsAK8Puppi.size);
    stream.select("jetAK8Puppi_Pt", data.jetsAK8Puppi.Pt);
    stream.select("jetAK8Puppi_Eta", data.jetsAK8Puppi.Eta);
    stream.select("jetAK8Puppi_Phi", data.jetsAK8Puppi.Phi);
    stream.select("jetAK8Puppi_E", data.jetsAK8Puppi.E);
    //stream.select("jetAK8Puppi_Charge", data.jetsAK8Puppi.Charge);
    stream.select("jetAK8Puppi_CSVv2", data.jetsAK8Puppi.CSVv2);
    stream.select("jetAK8Puppi_DoubleBAK8", data.jetsAK8Puppi.DoubleBAK8);
    stream.select("jetAK8Puppi_DoubleBCA15", data.jetsAK8Puppi.DoubleBCA15);
    stream.select("jetAK8Puppi_CMVAv2", data.jetsAK8Puppi.CMVAv2);
    stream.select("jetAK8Puppi_CvsL", data.jetsAK8Puppi.CvsL);
    stream.select("jetAK8Puppi_CvsB", data.jetsAK8Puppi.CvsB);
    stream.select("jetAK8Puppi_CMVA", data.jetsAK8Puppi.CMVA);
    //stream.select("jetAK8Puppi_GenPartonY", data.jetsAK8Puppi.GenPartonY);
    //stream.select("jetAK8Puppi_GenPartonEta", data.jetsAK8Puppi.GenPartonEta);
    //stream.select("jetAK8Puppi_GenPartonPhi", data.jetsAK8Puppi.GenPartonPhi);
    stream.select("jetAK8Puppi_GenPartonPt", data.jetsAK8Puppi.GenPartonPt);
    //stream.select("jetAK8Puppi_GenPartonE", data.jetsAK8Puppi.GenPartonE);
    //stream.select("jetAK8Puppi_GenPartonCharge", data.jetsAK8Puppi.GenPartonCharge);
    //stream.select("jetAK8Puppi_PartonFlavour", data.jetsAK8Puppi.PartonFlavour);
    //stream.select("jetAK8Puppi_HadronFlavour", data.jetsAK8Puppi.HadronFlavour);
    //stream.select("jetAK8Puppi_GenJetY", data.jetsAK8Puppi.GenJetY);
    //stream.select("jetAK8Puppi_GenJetEta", data.jetsAK8Puppi.GenJetEta);
    //stream.select("jetAK8Puppi_GenJetPhi", data.jetsAK8Puppi.GenJetPhi);
    stream.select("jetAK8Puppi_GenJetPt", data.jetsAK8Puppi.GenJetPt);
    //stream.select("jetAK8Puppi_GenJetE", data.jetsAK8Puppi.GenJetE);
    //stream.select("jetAK8Puppi_GenJetCharge", data.jetsAK8Puppi.GenJetCharge);
    //stream.select("jetAK8Puppi_muonMultiplicity", data.jetsAK8Puppi.muonMultiplicity);
    //stream.select("jetAK8Puppi_PhotonEnergy", data.jetsAK8Puppi.PhotonEnergy);
    //stream.select("jetAK8Puppi_ElectronEnergy", data.jetsAK8Puppi.ElectronEnergy);
    //stream.select("jetAK8Puppi_MuonEnergy", data.jetsAK8Puppi.MuonEnergy);
    //stream.select("jetAK8Puppi_HFHadronEnergy", data.jetsAK8Puppi.HFHadronEnergy);
    //stream.select("jetAK8Puppi_HFEMEnergy", data.jetsAK8Puppi.HFEMEnergy);
    //stream.select("jetAK8Puppi_ChargedHadronMultiplicity", data.jetsAK8Puppi.ChargedHadronMultiplicity);
    //stream.select("jetAK8Puppi_numberOfDaughters", data.jetsAK8Puppi.numberOfDaughters);
    //stream.select("jetAK8Puppi_neutralHadronMultiplicity", data.jetsAK8Puppi.neutralHadronMultiplicity);
    stream.select("jetAK8Puppi_neutralHadronEnergy", data.jetsAK8Puppi.neutralHadronEnergy);
    stream.select("jetAK8Puppi_neutralEmEnergy", data.jetsAK8Puppi.neutralEmEnergy);
    stream.select("jetAK8Puppi_chargedEmEnergy", data.jetsAK8Puppi.chargedEmEnergy);
    stream.select("jetAK8Puppi_chargedHadronEnergy", data.jetsAK8Puppi.chargedHadronEnergy);
    //stream.select("jetAK8Puppi_photonMultiplicity", data.jetsAK8Puppi.photonMultiplicity);
    //stream.select("jetAK8Puppi_electronMultiplicity", data.jetsAK8Puppi.electronMultiplicity);
    //stream.select("jetAK8Puppi_HFHadronMultiplicity", data.jetsAK8Puppi.HFHadronMultiplicity);
    //stream.select("jetAK8Puppi_HFEMMultiplicity", data.jetsAK8Puppi.HFEMMultiplicity);
    //stream.select("jetAK8Puppi_ChargeMuEnergy", data.jetsAK8Puppi.ChargeMuEnergy);
    stream.select("jetAK8Puppi_neutralMultiplicity", data.jetsAK8Puppi.neutralMultiplicity);
    //stream.select("jetAK8Puppi_neutralHadronEnergyFrac", data.jetsAK8Puppi.neutralHadronEnergyFrac);
    //stream.select("jetAK8Puppi_neutralEmEnergyFrac", data.jetsAK8Puppi.neutralEmEnergyFrac);
    //stream.select("jetAK8Puppi_chargedHadronEnergyFrac", data.jetsAK8Puppi.chargedHadronEnergyFrac);
    //stream.select("jetAK8Puppi_muonEnergyFrac", data.jetsAK8Puppi.muonEnergyFrac);
    //stream.select("jetAK8Puppi_chargedEmEnergyFrac", data.jetsAK8Puppi.chargedEmEnergyFrac);
    stream.select("jetAK8Puppi_chargedMultiplicity", data.jetsAK8Puppi.chargedMultiplicity);
    //stream.select("jetAK8Puppi_NumConstituents", data.jetsAK8Puppi.NumConstituents);
    //stream.select("jetAK8Puppi_jecFactor0", data.jetsAK8Puppi.jecFactor0);
    //stream.select("jetAK8Puppi_jecFactorL3Absolute", data.jetsAK8Puppi.jecFactorL3Absolute);
    //stream.select("jetAK8Puppi_jetArea", data.jetsAK8Puppi.jetArea);
    //stream.select("jetAK8Puppi_nSV", data.jetsAK8Puppi.nSV);
    //stream.select("jetAK8Puppi_SV0mass", data.jetsAK8Puppi.SV0mass);
    //stream.select("jetAK8Puppi_SV1mass", data.jetsAK8Puppi.SV1mass);
    stream.select("jetAK8Puppi_jecUncertainty", data.jetsAK8Puppi.jecUncertainty);
    //stream.select("jetAK8Puppi_PtResolution", data.jetsAK8Puppi.PtResolution);
    stream.select("jetAK8Puppi_JERSF", data.jetsAK8Puppi.JERSF);
    stream.select("jetAK8Puppi_JERSFUp", data.jetsAK8Puppi.JERSFUp);
    stream.select("jetAK8Puppi_JERSFDown", data.jetsAK8Puppi.JERSFDown);
    stream.select("jetAK8Puppi_SmearedPt", data.jetsAK8Puppi.SmearedPt);
    //stream.select("jetAK8Puppi_SmearedPEta", data.jetsAK8Puppi.SmearedPEta);
    //stream.select("jetAK8Puppi_SmearedPhi", data.jetsAK8Puppi.SmearedPhi);
    //stream.select("jetAK8Puppi_SmearedE", data.jetsAK8Puppi.SmearedE);
    stream.select("jetAK8Puppi_vSubjetIndex0", data.jetsAK8Puppi.vSubjetIndex0);
    stream.select("jetAK8Puppi_vSubjetIndex1", data.jetsAK8Puppi.vSubjetIndex1);
    stream.select("jetAK8Puppi_tau1", data.jetsAK8Puppi.tau1);
    stream.select("jetAK8Puppi_tau2", data.jetsAK8Puppi.tau2);
    stream.select("jetAK8Puppi_tau3", data.jetsAK8Puppi.tau3);
    stream.select("jetAK8Puppi_softDropMass", data.jetsAK8Puppi.softDropMass);
    stream.select("jetAK8Puppi_trimmedMass", data.jetsAK8Puppi.trimmedMass);
    stream.select("jetAK8Puppi_prunedMass", data.jetsAK8Puppi.prunedMass);
    stream.select("jetAK8Puppi_filteredMass", data.jetsAK8Puppi.filteredMass);
    //stream.select("jetAK8Puppi_Keys", data.jetsAK8Puppi.Keys);
    
    stream.select("subjetAK8_size", data.subjetsAK8.size);
    stream.select("subjetAK8_Pt", data.subjetsAK8.Pt);
    stream.select("subjetAK8_Eta", data.subjetsAK8.Eta);
    stream.select("subjetAK8_Phi", data.subjetsAK8.Phi);
    stream.select("subjetAK8_E", data.subjetsAK8.E);
    stream.select("subjetAK8_Charge", data.subjetsAK8.Charge);
    stream.select("subjetAK8_CSVv2", data.subjetsAK8.CSVv2);
    stream.select("subjetAK8_DoubleBAK8", data.subjetsAK8.DoubleBAK8);
    stream.select("subjetAK8_DoubleBCA15", data.subjetsAK8.DoubleBCA15);
    stream.select("subjetAK8_CMVAv2", data.subjetsAK8.CMVAv2);
    stream.select("subjetAK8_CvsL", data.subjetsAK8.CvsL);
    stream.select("subjetAK8_CvsB", data.subjetsAK8.CvsB);
    stream.select("subjetAK8_CMVA", data.subjetsAK8.CMVA);
    //stream.select("subjetAK8_GenPartonY", data.subjetsAK8.GenPartonY);
    //stream.select("subjetAK8_GenPartonEta", data.subjetsAK8.GenPartonEta);
    //stream.select("subjetAK8_GenPartonPhi", data.subjetsAK8.GenPartonPhi);
    stream.select("subjetAK8_GenPartonPt", data.subjetsAK8.GenPartonPt);
    //stream.select("subjetAK8_GenPartonE", data.subjetsAK8.GenPartonE);
    //stream.select("subjetAK8_GenPartonCharge", data.subjetsAK8.GenPartonCharge);
    //stream.select("subjetAK8_PartonFlavour", data.subjetsAK8.PartonFlavour);
    //stream.select("subjetAK8_HadronFlavour", data.subjetsAK8.HadronFlavour);
    //stream.select("subjetAK8_GenJetY", data.subjetsAK8.GenJetY);
    //stream.select("subjetAK8_GenJetEta", data.subjetsAK8.GenJetEta);
    //stream.select("subjetAK8_GenJetPhi", data.subjetsAK8.GenJetPhi);
    stream.select("subjetAK8_GenJetPt", data.subjetsAK8.GenJetPt);
    //stream.select("subjetAK8_GenJetE", data.subjetsAK8.GenJetE);
    //stream.select("subjetAK8_GenJetCharge", data.subjetsAK8.GenJetCharge);
    //stream.select("subjetAK8_muonMultiplicity", data.subjetsAK8.muonMultiplicity);
    //stream.select("subjetAK8_PhotonEnergy", data.subjetsAK8.PhotonEnergy);
    //stream.select("subjetAK8_ElectronEnergy", data.subjetsAK8.ElectronEnergy);
    //stream.select("subjetAK8_MuonEnergy", data.subjetsAK8.MuonEnergy);
    //stream.select("subjetAK8_HFHadronEnergy", data.subjetsAK8.HFHadronEnergy);
    //stream.select("subjetAK8_HFEMEnergy", data.subjetsAK8.HFEMEnergy);
    //stream.select("subjetAK8_ChargedHadronMultiplicity", data.subjetsAK8.ChargedHadronMultiplicity);
    //stream.select("subjetAK8_numberOfDaughters", data.subjetsAK8.numberOfDaughters);
    //stream.select("subjetAK8_neutralHadronMultiplicity", data.subjetsAK8.neutralHadronMultiplicity);
    stream.select("subjetAK8_neutralHadronEnergy", data.subjetsAK8.neutralHadronEnergy);
    stream.select("subjetAK8_neutralEmEnergy", data.subjetsAK8.neutralEmEnergy);
    stream.select("subjetAK8_chargedEmEnergy", data.subjetsAK8.chargedEmEnergy);
    stream.select("subjetAK8_chargedHadronEnergy", data.subjetsAK8.chargedHadronEnergy);
    //stream.select("subjetAK8_photonMultiplicity", data.subjetsAK8.photonMultiplicity);
    //stream.select("subjetAK8_electronMultiplicity", data.subjetsAK8.electronMultiplicity);
    //stream.select("subjetAK8_HFHadronMultiplicity", data.subjetsAK8.HFHadronMultiplicity);
    //stream.select("subjetAK8_HFEMMultiplicity", data.subjetsAK8.HFEMMultiplicity);
    //stream.select("subjetAK8_ChargeMuEnergy", data.subjetsAK8.ChargeMuEnergy);
    stream.select("subjetAK8_neutralMultiplicity", data.subjetsAK8.neutralMultiplicity);
    //stream.select("subjetAK8_neutralHadronEnergyFrac", data.subjetsAK8.neutralHadronEnergyFrac);
    //stream.select("subjetAK8_neutralEmEnergyFrac", data.subjetsAK8.neutralEmEnergyFrac);
    //stream.select("subjetAK8_chargedHadronEnergyFrac", data.subjetsAK8.chargedHadronEnergyFrac);
    //stream.select("subjetAK8_muonEnergyFrac", data.subjetsAK8.muonEnergyFrac);
    //stream.select("subjetAK8_chargedEmEnergyFrac", data.subjetsAK8.chargedEmEnergyFrac);
    stream.select("subjetAK8_chargedMultiplicity", data.subjetsAK8.chargedMultiplicity);
    //stream.select("subjetAK8_NumConstituents", data.subjetsAK8.NumConstituents);
    //stream.select("subjetAK8_jecFactor0", data.subjetsAK8.jecFactor0);
    //stream.select("subjetAK8_jecFactorL3Absolute", data.subjetsAK8.jecFactorL3Absolute);
    //stream.select("subjetAK8_jetArea", data.subjetsAK8.jetArea);
    //stream.select("subjetAK8_nSV", data.subjetsAK8.nSV);
    //stream.select("subjetAK8_SV0mass", data.subjetsAK8.SV0mass);
    //stream.select("subjetAK8_SV1mass", data.subjetsAK8.SV1mass);
    //stream.select("subjetAK8_Keys", data.subjetsAK8.Keys);
    
    stream.select("subjetAK8Puppi_size", data.subjetsAK8Puppi.size);
    stream.select("subjetAK8Puppi_Pt", data.subjetsAK8Puppi.Pt);
    stream.select("subjetAK8Puppi_Eta", data.subjetsAK8Puppi.Eta);
    stream.select("subjetAK8Puppi_Phi", data.subjetsAK8Puppi.Phi);
    stream.select("subjetAK8Puppi_E", data.subjetsAK8Puppi.E);
    //stream.select("subjetAK8Puppi_Charge", data.subjetsAK8Puppi.Charge);
    stream.select("subjetAK8Puppi_CSVv2", data.subjetsAK8Puppi.CSVv2);
    stream.select("subjetAK8Puppi_DoubleBAK8", data.subjetsAK8Puppi.DoubleBAK8);
    stream.select("subjetAK8Puppi_DoubleBCA15", data.subjetsAK8Puppi.DoubleBCA15);
    stream.select("subjetAK8Puppi_CMVAv2", data.subjetsAK8Puppi.CMVAv2);
    stream.select("subjetAK8Puppi_CvsL", data.subjetsAK8Puppi.CvsL);
    stream.select("subjetAK8Puppi_CvsB", data.subjetsAK8Puppi.CvsB);
    stream.select("subjetAK8Puppi_CMVA", data.subjetsAK8Puppi.CMVA);
    //stream.select("subjetAK8Puppi_GenPartonY", data.subjetsAK8Puppi.GenPartonY);
    //stream.select("subjetAK8Puppi_GenPartonEta", data.subjetsAK8Puppi.GenPartonEta);
    //stream.select("subjetAK8Puppi_GenPartonPhi", data.subjetsAK8Puppi.GenPartonPhi);
    stream.select("subjetAK8Puppi_GenPartonPt", data.subjetsAK8Puppi.GenPartonPt);
    //stream.select("subjetAK8Puppi_GenPartonE", data.subjetsAK8Puppi.GenPartonE);
    //stream.select("subjetAK8Puppi_GenPartonCharge", data.subjetsAK8Puppi.GenPartonCharge);
    //stream.select("subjetAK8Puppi_PartonFlavour", data.subjetsAK8Puppi.PartonFlavour);
    //stream.select("subjetAK8Puppi_HadronFlavour", data.subjetsAK8Puppi.HadronFlavour);
    //stream.select("subjetAK8Puppi_GenJetY", data.subjetsAK8Puppi.GenJetY);
    //stream.select("subjetAK8Puppi_GenJetEta", data.subjetsAK8Puppi.GenJetEta);
    //stream.select("subjetAK8Puppi_GenJetPhi", data.subjetsAK8Puppi.GenJetPhi);
    stream.select("subjetAK8Puppi_GenJetPt", data.subjetsAK8Puppi.GenJetPt);
    //stream.select("subjetAK8Puppi_GenJetE", data.subjetsAK8Puppi.GenJetE);
    //stream.select("subjetAK8Puppi_GenJetCharge", data.subjetsAK8Puppi.GenJetCharge);
    //stream.select("subjetAK8Puppi_muonMultiplicity", data.subjetsAK8Puppi.muonMultiplicity);
    //stream.select("subjetAK8Puppi_PhotonEnergy", data.subjetsAK8Puppi.PhotonEnergy);
    //stream.select("subjetAK8Puppi_ElectronEnergy", data.subjetsAK8Puppi.ElectronEnergy);
    //stream.select("subjetAK8Puppi_MuonEnergy", data.subjetsAK8Puppi.MuonEnergy);
    //stream.select("subjetAK8Puppi_HFHadronEnergy", data.subjetsAK8Puppi.HFHadronEnergy);
    //stream.select("subjetAK8Puppi_HFEMEnergy", data.subjetsAK8Puppi.HFEMEnergy);
    //stream.select("subjetAK8Puppi_ChargedHadronMultiplicity", data.subjetsAK8Puppi.ChargedHadronMultiplicity);
    //stream.select("subjetAK8Puppi_numberOfDaughters", data.subjetsAK8Puppi.numberOfDaughters);
    //stream.select("subjetAK8Puppi_neutralHadronMultiplicity", data.subjetsAK8Puppi.neutralHadronMultiplicity);
    stream.select("subjetAK8Puppi_neutralHadronEnergy", data.subjetsAK8Puppi.neutralHadronEnergy);
    stream.select("subjetAK8Puppi_neutralEmEnergy", data.subjetsAK8Puppi.neutralEmEnergy);
    stream.select("subjetAK8Puppi_chargedEmEnergy", data.subjetsAK8Puppi.chargedEmEnergy);
    stream.select("subjetAK8Puppi_chargedHadronEnergy", data.subjetsAK8Puppi.chargedHadronEnergy);
    //stream.select("subjetAK8Puppi_photonMultiplicity", data.subjetsAK8Puppi.photonMultiplicity);
    //stream.select("subjetAK8Puppi_electronMultiplicity", data.subjetsAK8Puppi.electronMultiplicity);
    //stream.select("subjetAK8Puppi_HFHadronMultiplicity", data.subjetsAK8Puppi.HFHadronMultiplicity);
    //stream.select("subjetAK8Puppi_HFEMMultiplicity", data.subjetsAK8Puppi.HFEMMultiplicity);
    //stream.select("subjetAK8Puppi_ChargeMuEnergy", data.subjetsAK8Puppi.ChargeMuEnergy);
    stream.select("subjetAK8Puppi_neutralMultiplicity", data.subjetsAK8Puppi.neutralMultiplicity);
    //stream.select("subjetAK8Puppi_neutralHadronEnergyFrac", data.subjetsAK8Puppi.neutralHadronEnergyFrac);
    //stream.select("subjetAK8Puppi_neutralEmEnergyFrac", data.subjetsAK8Puppi.neutralEmEnergyFrac);
    //stream.select("subjetAK8Puppi_chargedHadronEnergyFrac", data.subjetsAK8Puppi.chargedHadronEnergyFrac);
    //stream.select("subjetAK8Puppi_muonEnergyFrac", data.subjetsAK8Puppi.muonEnergyFrac);
    //stream.select("subjetAK8Puppi_chargedEmEnergyFrac", data.subjetsAK8Puppi.chargedEmEnergyFrac);
    stream.select("subjetAK8Puppi_chargedMultiplicity", data.subjetsAK8Puppi.chargedMultiplicity);
    //stream.select("subjetAK8Puppi_NumConstituents", data.subjetsAK8Puppi.NumConstituents);
    //stream.select("subjetAK8Puppi_jecFactor0", data.subjetsAK8Puppi.jecFactor0);
    //stream.select("subjetAK8Puppi_jecFactorL3Absolute", data.subjetsAK8Puppi.jecFactorL3Absolute);
    //stream.select("subjetAK8Puppi_jetArea", data.subjetsAK8Puppi.jetArea);
    //stream.select("subjetAK8Puppi_nSV", data.subjetsAK8Puppi.nSV);
    //stream.select("subjetAK8Puppi_SV0mass", data.subjetsAK8Puppi.SV0mass);
    //stream.select("subjetAK8Puppi_SV1mass", data.subjetsAK8Puppi.SV1mass);
    //stream.select("subjetAK8Puppi_Keys", data.subjetsAK8Puppi.Keys);
  }

} settings;
